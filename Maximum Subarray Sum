Problem Name:  Maximum Subarray Sum

Problem Description:

You are given an array of n integers and m operations. Each operation specifies a range of indices in the array and a value to be added to the elements within that range. Your task is to calculate the maximum possible sum of the array after applying all the operations.

Input:

The first line of the input contains two integers n and m, the number of integers in the array and the number of operations, respectively.

The second line contains n integers, the elements of the array.

The next m lines each contain three integers l, r, and v, representing an operation that adds v to the elements in the range [l, r].

Output:

Output a single integer, the maximum possible sum of the array after applying all the operations.

Constraints:

• 1 ≤ n ≤ 10^5
• 1 ≤ m ≤ 10^5
• -10^9 ≤ a[i] ≤ 10^9
• 1 ≤ l ≤ r ≤ n
• -10^9 ≤ v ≤ 10^9

Input:

5 3
1 2 3 4 5
1 2 10
3 4 20
1 4 30

Output:

100

Explanation:

After applying the operations, the array becomes [10, 30, 50, 5, 5]. The maximum sum of any contiguous subarray is 100, which is the sum of the elements in the range [1, 3].
